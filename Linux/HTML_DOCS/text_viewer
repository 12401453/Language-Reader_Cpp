<!DOCTYPE html> 
<html>

<head>
<link rel="stylesheet" type="text/css" href="tooltip_prevs.css" id="tt_styles">
<link rel="stylesheet" type="text/css" href="flexbox.css" id="flexbox_styles">
<link href="dict.css" rel="stylesheet" type="text/css">
<link href="dict.css" rel="stylesheet" type="text/css">

  <link href="style.css" rel="stylesheet" media="all and (min-width: 769px)" type="text/css">
<link href="style_small_screen.css" rel="stylesheet" media="all and (max-width: 768px)" type="text/css">

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">


</head>

<body style="background-color: #071022;">
  <br>

<div id="main_text">
    
<div class="link-buttons" onclick="add_text_link()">Add/remove texts</div><br>

<div id="select_button">
  <label for="textselect">Choose text:</label>
  <select id="textselect" name="textselect" onchange="selectText()" style="width: 100px;">
  <option value="0"></option>
  <?php ?>
  </select></div>
  <br><br><br>
  <div id="tt_button">
    <label for="tt_toggle">Tooltip previews</label>
    <input type="checkbox" id="tt_toggle" name="tt_toggle" autocomplete="off" onclick="tt_type()">
  </div><br>
  <div id="tt_button"><label for="diffannot_toggle">Mark automatic annotations</label>
    <input type="checkbox" id="diffannot_toggle" name="diffannot_toggle" autocomplete="off" onclick="differentiateAnnotations()">
  </div><br>  
<p1 id="p1">
<?cky ?>
</p1>

</div>
<span id="spoofspan" style="display: inline;"></span>
<span id="spoofspan2"><span id="hidden_lemma_tag"></span></span>
<div id="dict_outline">
  <div id="dict_topbar"><div id="dict_close"><div id="minimise"></div></div></div>
  <div id="dict_body" style="display: flex;">
  </div>
  <div id="dict_bottombar">
     <textarea id="dict_searchbox"></textarea>
     <img id="dict_logo" src="PONS.ico" title="PONS.com"></img>
     <div id="dict_select" style="visibility: hidden;">
       <div class="dict_name" id="PONS-pl-en">Polish (en)</div>
       <div class="dict_name" id="PONS-de-en">German</div>
       <div class="dict_name" id="PONS-pl-de">Polish (de)</div>
       <div class="dict_name" id="PONS-ru-de">Russian</div>
       <div class="dict_name" id="PONS-sv-de">Swedish</div>
       <div class="dict_name" id="PONS-da-de">Danish</div>
     </div>
  </div>
  </div>
<script src="functions.js"></script>
<script src="dict.js"></script>
</body>
</html>
<script>
  <?js ?>
const textselector = document.getElementById('textselect');

const textselect_resize = (event) => {
  let dummyselect = document.createElement('select');
  let dummyoption = document.createElement('option');

  dummyoption.textContent = event.target.options[event.target.selectedIndex].text;  //event.target is the <select> element; .options is a list of its options
  // dummyselect.style.cssText += "visibility: hidden; position: fixed; font-family: Calibri; font-size: 18px;";
  dummyselect.id = 'hidden_select';
  dummyselect.appendChild(dummyoption);
  event.target.after(dummyselect);//.after('') inserts stuff directly after the entire element, i.e. after its </> closing tag
  
  const dummywidth = dummyselect.getBoundingClientRect().width;
  event.target.style.width = `${dummywidth}px`;
  
  dummyselect.remove();
};

textselector.addEventListener('change', textselect_resize);
textselector.addEventListener('cookie_selection', textselect_resize);

window.onload = () => {
   // let cky = document.cookie;
  //  let textselect_cookie_present = cky.indexOf("text_id=") == -1 ? false : true;
    
    
    if(cookie_textselect) {
  //    let cookie_textselect = cky.slice(cky.indexOf("text_id=")+1, cky.indexOf(";") > 0 ? cky.indexOf(";") : cky.length);
      let textselect = document.getElementById("textselect");
      let text_options = textselect.options;
      let textid_deleted = true;
      for(let i = 0; i < text_options.length; i++) {
        if(text_options[i].value == cookie_textselect){
            textid_deleted = false;
            text_options[i].selected = true;
            textselect.dispatchEvent(new Event('cookie_selection'));
            setLangId();
            break;
        }
      }
      if(textid_deleted == false) {
        let pagenos = document.querySelectorAll('.pageno');
        pagenos.forEach(pageno => {
          if(Number(pageno.innerHTML) == 1) {
            pageno.classList.add("current_pageno");
          }
        });

        let tt_btns = document.querySelectorAll('.tooltip');

        tt_btns.forEach(tt_btn => {
          tt_btn.onclick = showAnnotate;
        });
        document.querySelectorAll('.multiword').forEach(mw_btn => {
            mw_btn.onclick = showMultiwordAnnotate;
        });
      }
      else console.log("cookie text has been deleted by another client");   
    }
    else console.log("no text_id cookie");
};
</script>